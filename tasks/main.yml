---
- name: Include OS-specific variables.
  include_vars: "{{ ansible_os_family }}.yml"

- name: Set the ntp_driftfile variable.
  set_fact:
    ntp_driftfile: "{{ __ntp_driftfile }}"
  when: ntp_driftfile is not defined

- name: Set the ntp_package variable.
  set_fact:
    ntp_package: "{{ __ntp_package }}"
  when: ntp_package is not defined

- name: Set the ntp_config_file variable.
  set_fact:
    ntp_config_file: "{{ __ntp_config_file }}"
  when: ntp_config_file is not defined

- name: Set the ntp_daemon variable.
  set_fact:
    ntp_daemon: "{{ __ntp_daemon }}"
  when: ntp_daemon is not defined

- name: Ensure NTP package is installed.
  package:
    name: "{{ ntp_package }}"
    state: present

- name: Ensure tzdata package is installed (Linux).
  package:
    name: "{{ ntp_tzdata_package }}"
    state: present
  when: ansible_system == "Linux"

- name: Set timezone.
  timezone:
    name: "{{ ntp_timezone }}"
  notify: restart cron

- name: Populate service facts.
  service_facts:

- name: Disable systemd-timesyncd if it's running but ntp is enabled.
  service:
    name: systemd-timesyncd.service
    enabled: false
    state: stopped
  when:
    - ntp_enabled | bool
    - '"systemd-timesyncd.service" in services'

- name: Ensure NTP is running and enabled as configured.
  service:
    name: "{{ ntp_daemon }}"
    state: started
    enabled: true
  when: ntp_enabled | bool

- name: Ensure NTP is stopped and disabled as configured.
  service:
    name: "{{ ntp_daemon }}"
    state: stopped
    enabled: false
  when: not (ntp_enabled | bool)

- name: Generate ntp configuration file.
  template:
    src: "{{ ntp_config_file | basename }}.j2"
    dest: "{{ ntp_config_file }}"
    mode: 0644
    backup: "{{ ntp_config_backup | default(omit, true) }}"
  notify: restart ntp
  when: ntp_manage_config | bool
